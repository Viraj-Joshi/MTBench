params:
  seed: ${...seed}
  algo:
    name: famo_a2c

  model:
    name: mt_continuous_a2c_logstd

  network:
    name: multihead_a2c
    separate: True
    multi_head: False

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 1.0
        fixed_sigma: True
    mlp:
      units: [512, 256, 128]
      activation: elu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:mt_ppo,${....experiment}} 
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}
    ppo: True
    mixed_precision: False
    normalize_input: False
    normalize_value: False
    value_bootstrap: True
    clip_actions: False
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 1.0
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 5e-4
    lr_schedule: adaptive
    schedule_type: standard
    kl_threshold: 0.008
    score_to_win: 10000
    max_epochs: ${resolve_default:3000,${....max_iterations}}
    save_best_after: 200
    save_frequency: 100
    print_stats: True
    grad_norm: 1.0
    entropy_coef: 0.001
    truncate_grads: True
    e_clip: 0.2
    # horizon_length: 125
    # minibatch_size: 8000
    horizon_length: 32
    minibatch_size: 16384
    mini_epochs: 5
    critic_coef: 4
    clip_value: True
    seq_len: 4
    bounds_loss_coef: 0.00
    shuffle_data: True

    # FAMO specific parameters
    famo:
      gamma: 1e-4 # ${.....famo_gamma}   # the regularization coefficient
      w_lr: 5e-3 # ${.....famo_w_lr}   # the learning rate of the task logits
      epsilon: 1e-3 # ${.....famo_eps}   # the epsilon value for the clipping of the task logits
      norm_w_grad: True # ${.....famo_norm_w_grad}   # whether to normalize the task logits gradients