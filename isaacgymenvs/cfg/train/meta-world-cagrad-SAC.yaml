params:
  seed: ${...seed}
  algo:
    name: cagrad_sac

  model:
    name: mt_continuous_sac

  network:
    name: soft_actor_critic
    separate: True

    space:
      continuous:
    mlp:
      units: [256, 128, 64]
      activation: relu
      initializer:
        name: default
    log_std_bounds: [-5, 2]

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:sac_mt_${....task_id},${....experiment}} 
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}
    mixed_precision: False
    normalize_input: True
    value_bootstrap: True
    normalize_value: False
    num_actors: ${....task.env.numEnvs}
    init_at_random_progress: True
    reward_shaper:
      scale_value: 1.0
    gamma: 0.99
    tau: 0.95

    init_alpha: 1
    alpha_lr: 0.005
    actor_lr: 0.0005
    critic_lr: 0.0005
    critic_tau: 0.005
    batch_size: 512

    max_epochs: ${resolve_default:20000,${....max_iterations}}
    num_steps_per_episode: 4
    save_best_after: 200
    save_frequency: 1000
    print_stats: True
    grad_norm: 1.0
    learnable_temperature: True
    num_warmup_steps: 40 # total number of warmup steps: num_actors * num_steps_per_episode * num_warmup_steps
    replay_buffer_size: 4000000
    target_entropy_coef: 2.0
    use_disentangled_alpha: True