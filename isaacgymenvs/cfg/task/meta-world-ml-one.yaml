# used to create the object
name: meta-world-meta-learning

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym. 
env:
  numEnvs: ${resolve_default:8192,${...num_envs}}
  envSpacing: 1.5
  episodeLength: 125
  enableDebugVis: ${...record_videos}
  cameraRenderingInterval: 5000
  cameraWidth: 512
  cameraHeight: 512

  clipObservations: 5.0
  clipActions: 1.0

  aggregateMode: 3

  actionScale: 7.5
  controlType: osc  # options are {joint_tor, osc}
  
  tasks: ${...task_id}
  taskEnvCount: ${...task_counts}
  taskEmbeddingType: "one_hot"  # linear
  taskEmbedding: False
  taskEmbeddingDim: 8

  metaLearningEnabled: True
  metaBatchSize: 32

  sparse_reward: ${...sparse_reward}
  termination_on_success: ${...termination_on_success}
  reward_scale: ${...reward_scale}

  seed: ${...seed}

# set to True if you use camera sensors in the environment
enableCameraSensors: True

sim:
  dt: 0.01667 # 1/60
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 8
    num_velocity_iterations: 1
    contact_offset: 0.005
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 1048576 # 1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 0 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
